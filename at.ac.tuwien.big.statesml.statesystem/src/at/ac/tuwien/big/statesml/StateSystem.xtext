grammar at.ac.tuwien.big.statesml.StateSystem with org.eclipse.xtext.common.Terminals

import "http://www.big.tuwien.ac.at/statesml"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// TODO: Extend the Xtext grammar

StateSystem returns StateSystem:
	'statesystem' name=ID 'for' systemUnit=[SystemUnit] '{'
	('attributes' '{' (attributes+=Attribute)+ '}')? 
	('events' '{' (processibleEvents+=Event)+ '}')?
	('states' '{'(nodes+=State)+ '}')? & 
	  ('transitions' '{'(nodes+=Transition)+ '}')? &
	  ('controls' '{'(nodes+=Control)+ '}')?
	('edges' '{' (edges+=Edges)+'}')?
	'}'
	;

Edges:
	
;


Control returns Node:
	SelectionDivergence | SelectionConvergence
;

SelectionConvergence:
	name=ID
;

SelectionDivergence:
	name=ID
;

State:
	(((initial?='initial'|^terminal?='terminal') name=ID)| name=ID '{' actionSequence+=FunctionCall* '}')
;

FunctionCall:
	
;

QualifiedName returns ecore::EString:
	ID (=> '.' ID)*;

EString returns ecore::EString:
	STRING;

EInt returns ecore::EInt:
	'-'? INT;

Attribute:
	name=ID
	
;


Event:
	'event' name=ID
;

SystemUnit:
	'systemUnit' name=ID
;

Transition returns Transition:
	name=ID ('triggered-by' trigger+=Trigger)?
		;
Trigger:
	event=[Event]
;
